/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.uesb.petshop.view;

import br.edu.uesb.petshop.control.TelaAddAnimalControl;
import br.edu.uesb.petshop.control.TelaAddClienteControl;
import br.edu.uesb.petshop.dao.ClienteDAO;
import br.edu.uesb.petshop.enumerado.EnumView;
import br.edu.uesb.petshop.model.Animal;
import br.edu.uesb.petshop.model.Cliente;
import br.edu.uesb.petshop.model.PetShop;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author matheus
 */
public class TelaAddAnimal extends javax.swing.JPanel {

    /**
     * Creates new form TelaAddAnimal
     */
    Campovazio cp = new Campovazio();
    Animal animal;
    ClienteDAO clienteDAO;
    TelaAddClienteControl clienteControl;
    Cliente cliente;
    TelaAddAnimalControl animalControl = new TelaAddAnimalControl();

    public TelaAddAnimal() {
        initComponents();
        animalControl = new TelaAddAnimalControl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        bVoltarAddAnimal = new javax.swing.JButton();
        lbTituloAddAnimal = new javax.swing.JLabel();
        bLimparAddAnimal = new javax.swing.JButton();
        bSalvarCadastroAddAnimal = new javax.swing.JButton();
        rbMachoAddAnimal = new javax.swing.JRadioButton();
        rbFemeaAddAnimal = new javax.swing.JRadioButton();
        txtNomeAddAnimal = new javax.swing.JTextField();
        cbEspecieAddAnimal = new javax.swing.JComboBox();
        cbDonoAddAnimal = new javax.swing.JComboBox();
        lbNomeAddAnimal = new javax.swing.JLabel();
        lbSexoAddAnimal = new javax.swing.JLabel();
        lbEspecieAddAnimal = new javax.swing.JLabel();
        lbRacaAddAnimal = new javax.swing.JLabel();
        lbDonoAddAnimal = new javax.swing.JLabel();
        txtRacaAddAnimal = new javax.swing.JTextField();
        bAtualizar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 400));

        bVoltarAddAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/15.png"))); // NOI18N
        bVoltarAddAnimal.setText("<html><body>VOLTAR</body></html>");
        bVoltarAddAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVoltarAddAnimalActionPerformed(evt);
            }
        });

        lbTituloAddAnimal.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbTituloAddAnimal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbTituloAddAnimal.setText("Animal");

        bLimparAddAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/51.png"))); // NOI18N
        bLimparAddAnimal.setText("LIMPAR");
        bLimparAddAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimparAddAnimalActionPerformed(evt);
            }
        });

        bSalvarCadastroAddAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/4.png"))); // NOI18N
        bSalvarCadastroAddAnimal.setText("<html><body>SALVAR CADASTRO</body></html>");
        bSalvarCadastroAddAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarCadastroAddAnimalActionPerformed(evt);
            }
        });

        bgSexo.add(rbMachoAddAnimal);
        rbMachoAddAnimal.setText("Macho");
        rbMachoAddAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMachoAddAnimalActionPerformed(evt);
            }
        });
        rbMachoAddAnimal.setActionCommand("MACHO");

        bgSexo.add(rbFemeaAddAnimal);
        rbFemeaAddAnimal.setText("Fêmea");
        rbFemeaAddAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemeaAddAnimalActionPerformed(evt);
            }
        });
        rbFemeaAddAnimal.setActionCommand("FÊMEA");

        cp.capslock(txtNomeAddAnimal);

        cbEspecieAddAnimal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "CACHORRO", "GATO" }));

        cbDonoAddAnimal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione..." }));

        lbNomeAddAnimal.setText("NOME:");

        lbSexoAddAnimal.setText("SEXO:");

        lbEspecieAddAnimal.setText("ESPECIE:");

        lbRacaAddAnimal.setText("RAÇA:");

        lbDonoAddAnimal.setText("DONO:");

        cp.capslock(txtRacaAddAnimal);

        bAtualizar.setEnabled(false);
        bAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/39.png"))); // NOI18N
        bAtualizar.setText("ATUALIZAR");
        bAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtualizarActionPerformed(evt);
            }
        });

        bExcluir.setEnabled(false);
        bExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/51.png"))); // NOI18N
        bExcluir.setText("EXCLUIR");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbNomeAddAnimal)
                    .addComponent(lbSexoAddAnimal)
                    .addComponent(lbEspecieAddAnimal)
                    .addComponent(lbRacaAddAnimal)
                    .addComponent(lbDonoAddAnimal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbEspecieAddAnimal, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbMachoAddAnimal)
                        .addGap(41, 41, 41)
                        .addComponent(rbFemeaAddAnimal)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bLimparAddAnimal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bVoltarAddAnimal, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSalvarCadastroAddAnimal, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                    .addComponent(txtNomeAddAnimal)
                    .addComponent(txtRacaAddAnimal)
                    .addComponent(cbDonoAddAnimal, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTituloAddAnimal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbTituloAddAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNomeAddAnimal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMachoAddAnimal)
                    .addComponent(rbFemeaAddAnimal)
                    .addComponent(lbSexoAddAnimal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEspecieAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEspecieAddAnimal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRacaAddAnimal)
                    .addComponent(txtRacaAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDonoAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDonoAddAnimal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bLimparAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bVoltarAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bSalvarCadastroAddAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        BuscarByNome();
        //Statement query = ConexaoPostgreSQL.openConnectionPostgreSQL();
        //try{
            //ResultSet rs = query.executeQuery("SELECT nome FROM \"Cliente\"");
            //
            //while(rs.next()){
                //cbDonoAddAnimal.addItem(rs.getString("nome"));
                //}
            //
            //}catch (SQLException ex) {
            //            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            //            lbLoginIncorretoMenuLogin.setVisible(true);
            //            }
    }// </editor-fold>//GEN-END:initComponents

    private void bVoltarAddAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVoltarAddAnimalActionPerformed

        PetShop.tela.showView(EnumView.TELAANIMAL);
        bLimparAddAnimalActionPerformed(evt);

    }//GEN-LAST:event_bVoltarAddAnimalActionPerformed

    private void bLimparAddAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimparAddAnimalActionPerformed
        txtNomeAddAnimal.setText("");
        txtRacaAddAnimal.setText("");
        cbEspecieAddAnimal.setSelectedItem("-");
        cbDonoAddAnimal.setSelectedItem("-");
        bgSexo.clearSelection();
    }//GEN-LAST:event_bLimparAddAnimalActionPerformed

    public void BuscarByNome() {
        clienteDAO = new ClienteDAO();
        ResultSet rs = clienteDAO.getByNome("");
        try {
            while (rs.next()) {
                cbDonoAddAnimal.addItem("CPF: " + rs.getString("cpf") + " - Nome: " + rs.getString("nome"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(TelaResultadoBuscaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setTxtNome(String txtNome) {
        this.txtNomeAddAnimal.setText(txtNome);
    }
    
    public void setTxtRaca(String txtRaca) {
        this.txtRacaAddAnimal.setText(txtRaca);
    }
    
    public void setCbDono(String cbDono) {
        this.cbDonoAddAnimal.setSelectedItem(cbDono);
    }
    
    public void setCbEspecie(String cbEspecie) {
        this.cbEspecieAddAnimal.setSelectedItem(cbEspecie);
    }

    public void setbEnableExcluir(boolean estado) {
        this.bExcluir.setEnabled(estado);
    }
    
    public void setbEnableAtualizar(boolean estado) {
        this.bAtualizar.setEnabled(estado);
    }
    
    public void setbEnableSalvar(boolean estado) {
        this.bSalvarCadastroAddAnimal.setEnabled(estado);
    }
    
    private void bSalvarCadastroAddAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarCadastroAddAnimalActionPerformed
        animalControl = new TelaAddAnimalControl();
        cp.textfield(txtNomeAddAnimal);
        cp.textfield(txtRacaAddAnimal);
        cp.combobox(cbDonoAddAnimal);
        cp.combobox(cbEspecieAddAnimal);

        String sexo = "";

        if ((!"".equals(txtNomeAddAnimal.getText())) && (!"".equals(txtRacaAddAnimal.getText()))
                && !cbDonoAddAnimal.getSelectedItem().equals("Selecione...")
                && !cbEspecieAddAnimal.getSelectedItem().equals("Selecione...")) {
            String cpf = cbDonoAddAnimal.getSelectedItem().toString().substring(5, 16) + "-" + cbDonoAddAnimal.getSelectedItem().toString().substring(17, 19);

            try {
                ResultSet rs = clienteDAO.getByCpf(cpf);
                if (rs.next()) {
                    cliente = new Cliente(rs.getInt("id"), rs.getString("nome"),
                            rs.getString("endereco"), rs.getString("bairro"),
                            rs.getString("complemento"), rs.getString("telefone2"),
                            rs.getString("cpf"), rs.getString("telefone1"),
                            rs.getDate("datanascimento"), rs.getString("sexo"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaAddAnimal.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (bgSexo.isSelected(rbFemeaAddAnimal.getModel())) {

                sexo = rbFemeaAddAnimal.getText();

            } else if (bgSexo.isSelected(rbMachoAddAnimal.getModel())) {

                sexo = rbMachoAddAnimal.getText();

            }

            if (!sexo.equals("")) {

                if (animalControl.verificaNomeExistente(txtNomeAddAnimal.getText())) {

                    JOptionPane.showMessageDialog(this, "Nome do animal já cadastrado!", "Atenção", JOptionPane.WARNING_MESSAGE);

                } else {

                    animal = new Animal(txtNomeAddAnimal.getText(), sexo, txtRacaAddAnimal.getText(), cbEspecieAddAnimal.getSelectedItem().toString(), cliente);
                    animalControl.salvarAnimal(animal);
                    bLimparAddAnimalActionPerformed(evt);

                    PetShop.tela.showView(EnumView.TELAANIMAL);

                }
                
            } else {

                JOptionPane.showMessageDialog(this, "Selecione um sexo!", "Atenção", JOptionPane.WARNING_MESSAGE);

            }

        } else {

            JOptionPane.showMessageDialog(null, "Por favor preencha os campos restantes!", "Atenção", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_bSalvarCadastroAddAnimalActionPerformed

    private void rbMachoAddAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMachoAddAnimalActionPerformed

    }//GEN-LAST:event_rbMachoAddAnimalActionPerformed

    private void rbFemeaAddAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemeaAddAnimalActionPerformed

    }//GEN-LAST:event_rbFemeaAddAnimalActionPerformed

    private void bAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtualizarActionPerformed
        ResultSet rs = animalControl.bucarByNome(txtNomeAddAnimal.getText());
        cliente = null;
        animal = null;
        try {
            if (rs.next()) {
                cliente = new Cliente(rs.getInt("id"), rs.getString("nome"),
                        rs.getString("endereco"), rs.getString("bairro"),
                        rs.getString("complemento"), rs.getString("telefone2"),
                        rs.getString("cpf"), rs.getString("telefone1"),
                        rs.getDate("datanascimento"), rs.getString("sexo"));

                rs = animalControl.bucarByIdDono(cliente.getId());
                while (rs.next()) {
                    animal = new Animal(rs.getInt("id"), rs.getString("nome"),
                            rs.getString("sexo"), rs.getString("raca"),
                            rs.getString("especie"), cliente);
                }

            }
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaAddCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        animalControl.atualizarAnimal(animal);
        PetShop.tela.showView(EnumView.TELAANIMAL);
    }//GEN-LAST:event_bAtualizarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed

        ResultSet rs = animalControl.bucarByNome(txtNomeAddAnimal.getText());
        cliente = null;
        try {
            if (rs.next()) {
                cliente = new Cliente(rs.getInt("id"), rs.getString("nome"),
                        rs.getString("endereco"), rs.getString("bairro"),
                        rs.getString("complemento"), rs.getString("telefone2"),
                        rs.getString("cpf"), rs.getString("telefone1"),
                        rs.getDate("datanascimento"), rs.getString("sexo"));

                rs = animalControl.bucarByIdDono(cliente.getId());
                while (rs.next()) {
                    animal = new Animal(rs.getInt("id"), rs.getString("nome"),
                            rs.getString("sexo"), rs.getString("raca"),
                            rs.getString("especie"), cliente);
                }

            }
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaAddCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        animalControl.excluirAnimal(animal);
        PetShop.tela.showView(EnumView.TELAANIMAL);
    }//GEN-LAST:event_bExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtualizar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bLimparAddAnimal;
    private javax.swing.JButton bSalvarCadastroAddAnimal;
    private javax.swing.JButton bVoltarAddAnimal;
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JComboBox cbDonoAddAnimal;
    private javax.swing.JComboBox cbEspecieAddAnimal;
    private javax.swing.JLabel lbDonoAddAnimal;
    private javax.swing.JLabel lbEspecieAddAnimal;
    private javax.swing.JLabel lbNomeAddAnimal;
    private javax.swing.JLabel lbRacaAddAnimal;
    private javax.swing.JLabel lbSexoAddAnimal;
    private javax.swing.JLabel lbTituloAddAnimal;
    private javax.swing.JRadioButton rbFemeaAddAnimal;
    private javax.swing.JRadioButton rbMachoAddAnimal;
    private javax.swing.JTextField txtNomeAddAnimal;
    private javax.swing.JTextField txtRacaAddAnimal;
    // End of variables declaration//GEN-END:variables
}
